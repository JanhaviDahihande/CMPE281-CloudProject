'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ReactHeight = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint "react/no-did-mount-set-state":0 */
/* eslint "react/no-did-update-set-state":0 */

var getElementHeight = function getElementHeight(el) {
  return el.clientHeight;
};

var ReactHeight = exports.ReactHeight = function (_PureComponent) {
  _inherits(ReactHeight, _PureComponent);

  function ReactHeight(props) {
    _classCallCheck(this, ReactHeight);

    var _this = _possibleConstructorReturn(this, (ReactHeight.__proto__ || Object.getPrototypeOf(ReactHeight)).call(this, props));

    _this.setWrapperRef = function (el) {
      _this.wrapper = el;
    };

    _this.state = {
      dirty: props.dirty,
      height: 0
    };
    return _this;
  }

  _createClass(ReactHeight, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      var _this2 = this;

      var height = this.props.getElementHeight(this.wrapper);
      var dirty = false;

      this.setState({ height: height, dirty: dirty }, function () {
        return _this2.props.onHeightReady(_this2.state.height);
      });
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(_ref) {
      var children = _ref.children,
          dirty = _ref.dirty;

      if (children !== this.props.children || dirty) {
        this.setState({ dirty: true });
      }
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate() {
      var _this3 = this;

      var height = this.props.getElementHeight(this.wrapper);
      var dirty = false;

      if (height === this.state.height) {
        this.setState({ dirty: dirty });
      } else {
        this.setState({ height: height, dirty: dirty }, function () {
          return _this3.props.onHeightReady(_this3.state.height);
        });
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          _onHeightReady = _props.onHeightReady,
          _getElementHeight = _props.getElementHeight,
          _dirty = _props.dirty,
          hidden = _props.hidden,
          children = _props.children,
          props = _objectWithoutProperties(_props, ['onHeightReady', 'getElementHeight', 'dirty', 'hidden', 'children']);

      var dirty = this.state.dirty;


      if (hidden && !dirty) {
        return null;
      }

      if (hidden) {
        return _react2.default.createElement(
          'div',
          { style: { height: 0, overflow: 'hidden' } },
          _react2.default.createElement(
            'div',
            _extends({ ref: this.setWrapperRef }, props),
            children
          )
        );
      }

      return _react2.default.createElement(
        'div',
        _extends({ ref: this.setWrapperRef }, props),
        children
      );
    }
  }]);

  return ReactHeight;
}(_react.PureComponent);

ReactHeight.propTypes = {
  children: _propTypes2.default.node.isRequired,
  onHeightReady: _propTypes2.default.func.isRequired,
  hidden: _propTypes2.default.bool,
  dirty: _propTypes2.default.bool,
  getElementHeight: _propTypes2.default.func
};
ReactHeight.defaultProps = {
  hidden: false,
  dirty: true,
  getElementHeight: getElementHeight
};